# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: 'ubuntu-18.04'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

steps:
  - task: Cache@2
    inputs:
      key: 'gradle | "$(Agent.OS)"'
      restoreKeys: gradle
      path: $(GRADLE_USER_HOME)
    displayName: Gradle build cache
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      codeCoverageToolOption: JaCoCo
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/reports/jacoco/jacocoTestReport.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/reports/jacoco/html'
      additionalCodeCoverageFiles: '$(System.DefaultWorkingDirectory)/**/*.exec'
      pathToSources: '$(System.DefaultWorkingDirectory)/src/main/kotlin'
  - script: |
      # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
      ./gradlew --stop
    displayName: Stop Gradle
